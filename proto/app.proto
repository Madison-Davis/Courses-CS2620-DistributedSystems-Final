syntax = "proto3";

package chat;

service AppService {
    rpc CreateAccount(CreateAccountRequest) returns (CreateAccountResponse);
    rpc ListAccounts(ListAccountsRequest) returns (ListAccountsResponse);
    rpc VerifyPassword(VerifyPasswordRequest) returns (VerifyPasswordResponse);
    rpc DeleteAccount(DeleteAccountRequest) returns (GenericResponse);
    rpc Broadcast(BroadcastRequest) returns (GenericResponse);
    rpc ReceiveBroadcastStream(ReceiveBroadcastRequest) returns (stream ReceiveBroadcastResponse);
    rpc ApproveOrDeny(ApproveOrDenyRequest) returns (GenericResponse);
    rpc ReplicateServer(ReplicationRequest) returns (GenericResponse);
    rpc Heartbeat(HeartbeatRequest) returns (GenericResponse);
    rpc UpdateExistingServer(UpdateExistingServerRequest) returns (UpdateExistingServerResponse);
}

service AppLoadBalancer {
    rpc ReplicateLB(ReplicationRequest) returns (GenericResponse);
    rpc InformServerDead(InformServerDeadRequest) returns (GenericResponse);
    rpc GetServer(GetServerRequest) returns (GetServerResponse);
    rpc CreateNewServer(CreateNewServerRequest) returns (CreateNewServerResponse);
    rpc FindLBLeader(FindLBLeaderRequest) returns (FindLBLeaderResponse);
}

message CreateAccountRequest {
    string username = 1;
    int32 region = 2;
    string password_hash = 3;
}

message CreateAccountResponse {
    int32 uuid = 1;
    bool success = 2;
    string message = 3;
}

message ListAccountsRequest { 
}

message ListAccountsResponse {
    bool success = 1;
    string message = 2;
    repeated string usernames = 3;
}

message VerifyPasswordRequest {
    string username = 1;
    string password_hash = 2;
}

message VerifyPasswordResponse {
    int32 uuid = 1;
    bool success = 2;
    string message = 3;
}

message DeleteAccountRequest {
    int32 uuid = 1;
    string username = 2;
    string password_hash = 3;
}

message BroadcastRequest {
    int32 sender = 1;
    int32 region = 2;
    int32 quantity = 3;
}

message ReceiveBroadcastRequest {
    int32 uuid = 1;
}

message ReceiveBroadcastResponse {
    int32 sender = 1;
    int32 region = 2;
    int32 quantity = 3;
}

message ApproveOrDenyRequest {
    bool approved = 1;
}

message ReplicationRequest {
    string method = 1;
    bytes payload = 2;
}

message HeartbeatRequest {
}

message InformServerDeadRequest {
    int32 pid = 1;
}

message CreateNewServerRequest {
    int32 region = 1;
    string host = 2;
}

message CreateNewServerResponse {
    bool success = 1;
    int32 pid = 2;
    string sql_database = 3;
}

message UpdateExistingServerRequest {
    string servers = 1;
}

message UpdateExistingServerResponse {
    bool success = 1;
    string sql_database = 2;
}

message GetServerRequest {
    int32 region = 1;
}

message GetServerResponse {
    string address = 1;
    bool success = 2;
    string message = 3;
}

message FindLBLeaderRequest {
}

message FindLBLeaderResponse {
  bool success = 1;
  string leader_address = 2;
}

message GenericResponse {
    bool success = 1;
    string message = 2;
}
